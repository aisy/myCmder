{"version":3,"sources":["index.js"],"names":["name","verbose","version","root","resolve","appName","basename","packageToInstall","getInstallPackage","packageName","getPackageName","runExpoCli","checkAppName","mkdir","isSafeToCreateProjectIn","console","log","process","exit","packageJson","private","writeFile","join","chdir","packageManagerCmd","packageManagerType","run","createApp","install","code","command","args","error","checkNodeVersion","scriptsPath","cwd","init","require","packageJsonPath","JSON","readFile","parse","engines","node","satisfies","red","validFiles","readdir","indexOf","file","every","argv","slice","commands","_","packageManager","length","scriptsVersion","reason","then","userHasYarn","result","sync","stdio","status","e","defaultType","supportedTypes","index","callback","type","cmd","push","concat","validSemver","valid","installPackage","matches","match","Error","charAt","substr","split","allDependencies","cyan","map","depName","on","warn","rl","createInterface","input","stdin","output","stdout","question","answer","close","test","trim"],"mappings":"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","file":"index.js","sourcesContent":["\n\n// @flow\n\n// DON'T MODIFY THIS FILE\n// IF AT ALL POSSIBLE, MAKE ANY CHANGES IN THE SCRIPTS PACKAGE\n\nimport fse from 'fs-extra';\nimport chalk from 'chalk';\nimport minimist from 'minimist';\nimport path from 'path';\nimport pathExists from 'path-exists';\nimport semver from 'semver';\nimport spawn from 'cross-spawn';\n\nconst argv = minimist(process.argv.slice(2));\n\n/**\n * Arguments:\n *   --version - to print current version\n *   --verbose - to print npm logs during init\n *   --scripts-version <alternative package>\n *   --reason - shortcut for: --scripts-version 'reason-react-native-scripts'\n *   --package-manager <package manager name or path>\n *     Example of valid values:\n *     - a specific npm version: \"0.22.0-rc1\"\n *     - a .tgz archive from npm: \"https://registry.npmjs.org/react-native-scripts/-/react-native-scripts-0.20.0.tgz\"\n *     - a package from `tasks/clean_pack.sh`: \"/home/adam/create-react-native-app/react-native-scripts-0.22.0.tgz\"\n */\nconst commands = argv._;\nconst cwd = process.cwd();\nconst packageManager = argv['package-manager'];\n\nif (commands.length === 0) {\n  if (argv.version) {\n    const version = require('../package.json').version;\n    console.log(`create-react-native-app version: ${version}`);\n    process.exit();\n  }\n  console.error('Usage: create-react-native-app <project-directory> [--verbose]');\n  process.exit(1);\n}\n\nconst scriptsVersion = argv.reason ? 'reason-react-native-scripts' : argv['scripts-version'];\n\ncreateApp(commands[0], !!argv.verbose, scriptsVersion).then(() => {});\n\nfunction userHasYarn() {\n  try {\n    const result = spawn.sync('yarnpkg', ['--version'], { stdio: 'ignore' });\n    if (result.error || result.status !== 0) {\n      return false;\n    }\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n// This decides the 'interface' of the package managing command.\n// Ex: If it guesses the type of package manager as 'yarn',\n//     then it executes '(yarn) add' command instead of '(npm) install'.\nfunction packageManagerType() {\n  const defaultType = 'npm';\n  const supportedTypes = ['yarn', 'npm', 'pnpm'];\n\n  if (packageManager) {\n    let index = supportedTypes.indexOf(packageManager);\n    return index === -1 ? defaultType : supportedTypes[index];\n  }\n\n  return userHasYarn() ? 'yarn' : defaultType;\n}\n\nfunction packageManagerCmd() {\n  if (packageManager) {\n    return packageManager;\n  } else {\n    return packageManagerType() === 'yarn' ? 'yarnpkg' : 'npm';\n  }\n}\n\nasync function createApp(name: string, verbose: boolean, version: ?string): Promise<void> {\n  const root = path.resolve(name);\n  const appName = path.basename(root);\n\n  const packageToInstall = getInstallPackage(version);\n  const packageName = getPackageName(packageToInstall);\n\n  if (packageToInstall === 'react-native-scripts') {\n    // The latest version of react-native-scripts is just a wrapper for expo-cli,\n    // so we can skip installing it and just run expo-cli directly.\n    runExpoCli('init', name);\n    return;\n  }\n\n  checkAppName(appName, packageName);\n\n  if (!await pathExists(name)) {\n    await fse.mkdir(root);\n  } else if (!await isSafeToCreateProjectIn(root)) {\n    console.log(`The directory \\`${name}\\` contains file(s) that could conflict. Aborting.`);\n    process.exit(1);\n  }\n\n  console.log(`Creating a new React Native app in ${root}.`);\n  console.log();\n\n  const packageJson = {\n    name: appName,\n    version: '0.1.0',\n    private: true,\n  };\n  await fse.writeFile(path.join(root, 'package.json'), JSON.stringify(packageJson, null, 2));\n  process.chdir(root);\n\n  console.log(\n    `Using package manager as ${packageManagerCmd()} with ${packageManagerType()} interface.`\n  );\n  console.log('Installing packages. This might take a couple minutes.');\n  console.log('Installing react-native-scripts...');\n  console.log();\n\n  await run(root, appName, version, verbose, packageToInstall, packageName);\n}\n\nfunction install(\n  packageToInstall: string,\n  verbose: boolean,\n  callback: (code: number, command: string, args: Array<string>) => Promise<void>\n): void {\n  const type = packageManagerType();\n  let args, result;\n  let cmd = packageManagerCmd();\n\n  if (type === 'yarn') {\n    args = ['add'];\n\n    if (verbose) {\n      args.push('--verbose');\n    }\n\n    args = args.concat(['--dev', '--exact', '--ignore-optional', packageToInstall]);\n    result = spawn.sync(cmd, args, { stdio: 'inherit' });\n  } else {\n    args = ['install'];\n\n    if (verbose) {\n      args.push('--verbose');\n    }\n    args = args.concat(['--save-dev', '--save-exact', packageToInstall]);\n\n    result = spawn.sync(cmd, args, { stdio: 'inherit' });\n  }\n\n  callback(result.status, cmd, args).then(\n    () => {},\n    e => {\n      throw e;\n    }\n  );\n}\n\nasync function run(\n  root: string,\n  appName: string,\n  version: ?string,\n  verbose: boolean,\n  packageToInstall: string,\n  packageName: string\n): Promise<void> {\n  install(packageToInstall, verbose, async (code: number, command: string, args: Array<string>) => {\n    if (code !== 0) {\n      console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n      return;\n    }\n\n    await checkNodeVersion(packageName);\n\n    const scriptsPath = path.resolve(\n      process.cwd(),\n      'node_modules',\n      packageName,\n      'build',\n      'scripts',\n      'init.js'\n    );\n\n    // $FlowFixMe (dikaiosune) maybe there's a way to convince flow this is legit?\n    const init = require(scriptsPath);\n    await init(root, appName, verbose, cwd);\n  });\n}\n\nfunction getInstallPackage(version: ?string): string {\n  let packageToInstall = 'react-native-scripts';\n  const validSemver = semver.valid(version);\n  if (validSemver) {\n    packageToInstall += `@${validSemver}`;\n  } else if (version) {\n    // for tar.gz or alternative paths\n    packageToInstall = version;\n  }\n  return packageToInstall;\n}\n\n// Extract package name from tarball url or path.\nfunction getPackageName(installPackage: string): string {\n  if (installPackage.indexOf('.tgz') > -1) {\n    // The package name could be with or without semver version, e.g. react-scripts-0.2.0-alpha.1.tgz\n    // However, this function returns package name only wihout semver version.\n    const matches = installPackage.match(/^.+[\\/\\\\](.+?)(?:-\\d+.+)?\\.tgz$/);\n    if (matches && matches.length >= 2) {\n      return matches[1];\n    } else {\n      throw new Error(\n        `Provided scripts package (${installPackage}) doesn't have a valid filename.`\n      );\n    }\n  } else if (installPackage.indexOf('@') > 0) {\n    // Do not match @scope/ when stripping off @version or @tag\n    return installPackage.charAt(0) + installPackage.substr(1).split('@')[0];\n  }\n  return installPackage;\n}\n\nasync function checkNodeVersion(packageName: string): Promise<void> {\n  const packageJsonPath = path.resolve(process.cwd(), 'node_modules', packageName, 'package.json');\n\n  const packageJson = JSON.parse(await fse.readFile(packageJsonPath));\n  if (!packageJson.engines || !packageJson.engines.node) {\n    return;\n  }\n\n  if (!semver.satisfies(process.version, packageJson.engines.node)) {\n    console.error(\n      chalk.red(\n        'You are currently running Node %s but create-react-native-app requires %s.' +\n          ' Please use a supported version of Node.\\n'\n      ),\n      process.version,\n      packageJson.engines.node\n    );\n    process.exit(1);\n  }\n}\n\nfunction checkAppName(appName: string, packageName: string): void {\n  const allDependencies = [\n    'react-native-scripts',\n    'exponent',\n    'expo',\n    'vector-icons',\n    'react',\n    'react-native',\n  ];\n\n  if (allDependencies.indexOf(appName) >= 0) {\n    console.error(\n      chalk.red(\n        'We cannot create a project called `' +\n          appName +\n          '` because a dependency with the same name exists.\\n' +\n          'Due to the way npm works, the following names are not allowed:\\n\\n'\n      ) +\n        chalk.cyan(\n          allDependencies\n            .map(depName => {\n              return '  ' + depName;\n            })\n            .join('\\n')\n        ) +\n        chalk.red('\\n\\nPlease choose a different project name.')\n    );\n    process.exit(1);\n  }\n}\n\n// If project only contains files generated by GH, it’s safe\nasync function isSafeToCreateProjectIn(root: string): Promise<boolean> {\n  const validFiles = ['.DS_Store', 'Thumbs.db', '.git', '.gitignore', 'README.md', 'LICENSE'];\n  return (await fse.readdir(root)).every(file => {\n    return validFiles.indexOf(file) >= 0;\n  });\n}\n\nfunction runExpoCli(...args) {\n  spawn('expo-cli', args, { stdio: 'inherit' })\n    .on('exit', function(code) {\n      process.exit(code);\n    })\n    .on('error', function() {\n      console.warn('This command requires Expo CLI.');\n      var rl = require('readline').createInterface({\n        input: process.stdin,\n        output: process.stdout,\n      });\n      rl.question('Do you want to install it globally [Y/n]? ', function(answer) {\n        rl.close();\n        if (/^n/i.test(answer.trim())) {\n          process.exit(1);\n        } else {\n          console.log(\"Installing the package 'expo-cli'...\");\n          spawn('npm', ['install', '--global', '--loglevel', 'error', 'expo-cli@latest'], {\n            stdio: ['inherit', 'ignore', 'inherit'],\n          }).on('close', function(code) {\n            if (code !== 0) {\n              console.error('Installing Expo CLI failed. You can install it manually with:');\n              console.error('  npm install --global expo-cli');\n              process.exit(code);\n            } else {\n              console.log('Expo CLI installed. You can run `expo --help` for instructions.');\n              runExpoCli(...args);\n            }\n          });\n        }\n      });\n    });\n}\n"]}